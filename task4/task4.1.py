# Напишите функцию which_triangle(a, b, c),
# На вход поступают длины трёх сторон треугольника: a, b, c
# Программа выводит какой это треугольник type_triangle: "Равносторонний", "Равнобедренный", "Обычный".
# Либо "Не треугольник", если по переданным параметрам невозможно построить треугольник
# Например 1, 1, 1 --> "Равносторонний"

def which_triangle(a, b, c):
    """
    Функция определяет тип треугольника по его сторона
    :param a: сторна треугольника 1
    :param b: сторна треугольника 2
    :param c: сторна треугольника 3
    :return: выводит тип треугольника
    """
    if a + b > c and a + c > b and c + b > a:
        if a == b != c or b == c != a or a == c != b:
            type_triangle = 'Равнобедренный'
        elif a == b and b == c:
            type_triangle = 'Равносторонний'
        else:
            type_triangle = 'Обычный'
    else:
        type_triangle = 'Не треугольник'
    return type_triangle


# Ниже НИЧЕГО НЕ НАДО ИЗМЕНЯТЬ


data = [
    (3, 3, 3),
    (1, 2, 2),
    (3, 4, 5),
    (3, 2, 3),
    (1, 2, 3)
]

test_data = [
    "Равносторонний", "Равнобедренный", "Обычный", "Равнобедренный", "Не треугольник"
]

for i, d in enumerate(data):
    assert which_triangle(*d) == test_data[i], f'С набором {d} есть ошибка, не проходит проверку'
    print(f'Тестовый набор {d} прошёл проверку')
print('Всё ок')
